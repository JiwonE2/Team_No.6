{"ast":null,"code":"var _jsxFileName = \"C:\\\\reactproject\\\\movie_app_2021\\\\src\\\\App.js\";\nimport PropTypes from \"prop-types\";\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\nimport Movie from \"./Movie\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      isLoading: true\n    };\n\n    this.getMovies = async () => {\n      const {\n        data: {\n          data: {\n            movies\n          }\n        }\n      } = await axios.get(\"https://yts.mx/api/v2/list_movies.json\"); //console.log(movies);\n      //    this.setState({ movies: movies });\n\n      this.setState({\n        movies,\n        isLoading: false\n      });\n    };\n  }\n\n  componentDidMount() {\n    this.getMovies();\n  }\n\n  render() {\n    const {\n      isLoading,\n      movies\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"container\",\n      children: isLoading ? /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"loader__text\",\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 23\n      }, this) : movies.map(movie => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"movies\",\n          children: /*#__PURE__*/_jsxDEV(Movie, {\n            id: movie.id,\n            year: movie.year,\n            title: movie.title,\n            summary: movie.summary,\n            poster: movie.medium_cover_image,\n            genres: movie.genres\n          }, movie.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 17\n          }, this)\n        }, movie.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:/reactproject/movie_app_2021/src/App.js"],"names":["PropTypes","React","useState","axios","Movie","App","Component","state","isLoading","getMovies","data","movies","get","setState","componentDidMount","render","map","movie","id","year","title","summary","medium_cover_image","genres"],"mappings":";AAAA,OAAOA,SAAP,MAAsB,YAAtB;AACA,OAAOC,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,SAAlB;;;AAEA,MAAMC,GAAN,SAAkBJ,KAAK,CAACK,SAAxB,CAAkC;AAAA;AAAA;AAAA,SAChCC,KADgC,GACxB;AACNC,MAAAA,SAAS,EAAE;AADL,KADwB;;AAAA,SAKhCC,SALgC,GAKpB,YAAY;AACtB,YAAM;AACJC,QAAAA,IAAI,EAAE;AACJA,UAAAA,IAAI,EAAE;AAAEC,YAAAA;AAAF;AADF;AADF,UAIF,MAAMR,KAAK,CAACS,GAAN,CAAU,wCAAV,CAJV,CADsB,CAMtB;AACA;;AACA,WAAKC,QAAL,CAAc;AAAEF,QAAAA,MAAF;AAAUH,QAAAA,SAAS,EAAE;AAArB,OAAd;AACD,KAd+B;AAAA;;AAgBhCM,EAAAA,iBAAiB,GAAG;AAClB,SAAKL,SAAL;AACD;;AAEDM,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEP,MAAAA,SAAF;AAAaG,MAAAA;AAAb,QAAwB,KAAKJ,KAAnC;AACA,wBACE;AAAS,MAAA,SAAS,EAAC,WAAnB;AAAA,gBACGC,SAAS,gBAAI;AAAM,QAAA,SAAS,EAAC,cAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAJ,GAAwDG,MAAM,CAACK,GAAP,CAAWC,KAAK,IAAI;AACpF,4BACE;AAAoB,UAAA,SAAS,EAAC,QAA9B;AAAA,iCAEI,QAAC,KAAD;AAAsB,YAAA,EAAE,EAAEA,KAAK,CAACC,EAAhC;AAAoC,YAAA,IAAI,EAAED,KAAK,CAACE,IAAhD;AAAsD,YAAA,KAAK,EAAEF,KAAK,CAACG,KAAnE;AAA0E,YAAA,OAAO,EAAEH,KAAK,CAACI,OAAzF;AAAkG,YAAA,MAAM,EAAEJ,KAAK,CAACK,kBAAhH;AAAoI,YAAA,MAAM,EAAEL,KAAK,CAACM;AAAlJ,aAAYN,KAAK,CAACC,EAAlB;AAAA;AAAA;AAAA;AAAA;AAFJ,WAAUD,KAAK,CAACC,EAAhB;AAAA;AAAA;AAAA;AAAA,gBADF;AAMD,OAPiE;AADpE;AAAA;AAAA;AAAA;AAAA,YADF;AAYD;;AAlC+B;;AAsClC,eAAeb,GAAf","sourcesContent":["import PropTypes from \"prop-types\";\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\nimport Movie from \"./Movie\";\n\nclass App extends React.Component {\n  state = {\n    isLoading: true,\n  }\n\n  getMovies = async () => {\n    const {\n      data: {\n        data: { movies }\n      }\n    } = await axios.get(\"https://yts.mx/api/v2/list_movies.json\");\n    //console.log(movies);\n    //    this.setState({ movies: movies });\n    this.setState({ movies, isLoading: false });\n  };\n\n  componentDidMount() {\n    this.getMovies();\n  }\n\n  render() {\n    const { isLoading, movies } = this.state;\n    return (\n      <section className=\"container\">\n        {isLoading ? (<span className=\"loader__text\">Loading...</span>) : movies.map(movie => {\n          return (\n            <div key={movie.id} className=\"movies\">\n              {\n                <Movie key={movie.id} id={movie.id} year={movie.year} title={movie.title} summary={movie.summary} poster={movie.medium_cover_image} genres={movie.genres} />\n              }\n            </div>);\n        })}\n      </section>\n    );\n  }\n}\n\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}